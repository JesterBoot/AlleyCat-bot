from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import CallbackQuery

from FSM.Race_states import Race
from data.locations import MY_HOME
from keyboards.inline_kb import got_the_point
from keyboards.reply_kb import get_location_button
from loader import dp

# –¢—ã –∞–¥–º–∏–Ω —Ü—É–∫–ª–∏–Ω–≥–∞. –î–≤–µ –∫–Ω–æ–ø–∫–∏ "–∑–∞–±–∞–Ω–∏—Ç—å" , "–∑–∞–±–∞–Ω–∏—Ç—å"
'''—Ä–∞—Å—Å—Ç–∞–≤–∏—Ç—å —Å—Ç–µ–π–∫—Ç—ã –∏ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ª–æ–∫–∞—Ü–∏–µ–π'''
@dp.callback_query_handler(state=Race.First_point)
async def get_location(call: CallbackQuery, state: FSMContext):
    await call.answer(cache_time=55)
    await call.message.delete()
    await call.message.answer('–û—Ç–ø—Ä–∞–≤—å —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ üó∫.\n–ö–Ω–æ–ø–∫–∞ —Å–Ω–∏–∑—É ‚¨áÔ∏è',
                              reply_markup=get_location_button)
    await state.finish()

'''–Ω–µ –ø–æ–Ω–∏–º–∞—é –∫–∞–∫ —Ä–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –¥–∏–∫—Ç –∏ –∫–∞–∫ —ç—Ç–æ –≤–Ω–µ—Å—Ç–∏ '''
@dp.message_handler(content_types=types.ContentType.LOCATION)
async def selfie_query(message: types.Message, state: FSMContext):
    print(message.location)
    # print('{:.2f}'.format(message.location.latitude))
    # print('{:.3f}'.format(message.location.longitude))
    # print(MY_HOME[0])
    # print(MY_HOME[1])
    # if '{:.2f}'.format(message.location.latitude) == MY_HOME[0] and '{:.3f}'.format(message.location.longitude) == MY_HOME[1]:
    #     await message.answer('–¢—ã –Ω–∞ –º–µ—Å—Ç–µ!\n–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤—å —Å–µ–ª—Ñ–∏')
    # else:
    #     await message.answer('–¢—ã –¥–∞–ª–µ–∫–æ –æ—Ç —Ç–æ—á–∫–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑', reply_markup=get_location_button)


@dp.message_handler(content_types=types.ContentType.PHOTO)
async def get_selfie(message: types.Message, state: FSMContext):
    point = '–•—Ä–∞–º –•—Ä–∏—Å—Ç–∞ –°–ø–∞—Å–∏—Ç–µ–ª—è'
    # if state.get_state()=='blabla':
    #     pass
    await message.answer(f'–û—Ç–ª–∏—á–Ω–∞—è —Ñ–æ—Ç–∫–∞, –¥—É–π –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Ç–æ—á–∫—É {point}',
                         reply_markup=got_the_point)


